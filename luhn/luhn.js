// Generated by CoffeeScript 1.11.1
(function() {
  var Luhn;

  Luhn = (function() {
    function Luhn(number1) {
      this.number = number1;
      this.checkDigit = parseInt(this.number.toString().split("").pop());
      this.addends = this.addends();
      this.checksum = this.checksum();
      this.valid = this.valid();
    }

    Luhn.prototype.addends = function(newArr, place, remainder) {
      var num;
      if (newArr == null) {
        newArr = [];
      }
      if (place == null) {
        place = -1;
      }
      if (remainder && remainder.length === 0) {
        return newArr.reverse();
      }
      remainder = remainder || this.number.toString().split("").reverse();
      num = parseInt(remainder.shift());
      if (place < 0) {
        newArr.push(num);
      } else {
        if (num * 2 >= 10) {
          newArr.push(num * 2 - 9);
        } else {
          newArr.push(num * 2);
        }
      }
      return this.addends(newArr, place * -1, remainder);
    };

    Luhn.prototype.checksum = function() {
      return this.addends.reduce(function(element, sum) {
        return sum + parseInt(element);
      });
    };

    Luhn.prototype.valid = function() {
      return this.checksum % 10 === 0;
    };

    Luhn.create = function(number) {
      var luhn;
      luhn = new Luhn(number * 10);
      if (luhn.valid) {
        return luhn.number;
      } else {
        return luhn.number + 10 - luhn.checksum % 10;
      }
    };

    return Luhn;

  })();

  module.exports = Luhn;

}).call(this);
